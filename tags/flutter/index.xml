<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flutter on 愚直プログラマ</title>
    <link>https://tsuzukihashi.github.io/tags/flutter/</link>
    <description>Recent content in Flutter on 愚直プログラマ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Feb 2021 00:17:05 +0900</lastBuildDate><atom:link href="https://tsuzukihashi.github.io/tags/flutter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutterで作ったプロジェクトのBundleID・PckageNameを変更する方法と対策</title>
      <link>https://tsuzukihashi.github.io/posts/flutter/flutter-package-bundle/</link>
      <pubDate>Wed, 03 Feb 2021 00:17:05 +0900</pubDate>
      
      <guid>https://tsuzukihashi.github.io/posts/flutter/flutter-package-bundle/</guid>
      <description>普通にVSCodeやコマンドからFlutterプロジェクトを作るとBundleID・PackageNameはcom.example.hogehoge のように指定されてしまいます。
これを修正する方法を示すとともに、そうならないようにするVSCodeで開発している方向けの設定をご紹介します。
すでに作ってしまった場合の修正方法   iOS iOSの場合は一つだけ変更すれば良いので楽です。 FlutterプロジェクトのiOSディレクトリに移動します。
例
/my_app/ios ここで
xed . でXcodeでプロジェクトを開きます。
以下の画像のようにTARGETSのBundle Identifierを修正します。 以上で終わりです。
    Android Androidの場合は名前の修正とディレクトリの修正の二つがあります。
  ネーム変更 VSCodeでプロジェクトを開きます。 ⌘ + shift + fでプロジェクト全体の検索画面を開きます。 以下のように検索窓にcom.example.{プロジェクト名前}を入れて検索します。
検索窓の左側に下向きの矢印ボタンがあるのでそれをクリックします。 その後置換するための窓が出てきますので、そこに変更したいPackage Nameを入れて、右側にある一斉置換のボタンをクリックすると名前を変更することができます。
  ディレクトリ変更 Androidのデフォルトの言語がjavaかkotlinによって変わりますが、大体kotlinですので、以下のようなディレクトリ構成になっていると思います。
my_app/android/app/src/main/kotlin/com/example/my_app ですので、この/com/exampleの名前を設定したいPackage Nameに変更しておきます。
  以上で終わりです。
  VSCodeの場合のより良い方法 上記のようなことを毎回やるのはよろしくないので、次からは自動的にやってもらいたいと思います。
 Settings.jsonを開く ショートカットキーcommand + ,  organizationで検索し、DartのExtensionsのFlutter Create OrganizationからEdit in settings.jsonをクリックします。
開くと以下のようなjsonがあるはずです。
これのart.flutterCreateOrganizationがnullになっているため、ここを自身のorganizationを設定してあげます。
{ &amp;#34;[dart]&amp;#34;: { &amp;#34;editor.formatOnSave&amp;#34;: true, &amp;#34;editor.formatOnType&amp;#34;: true, &amp;#34;editor.</description>
    </item>
    
    <item>
      <title>Flutter入門！</title>
      <link>https://tsuzukihashi.github.io/posts/flutter/entry-flutter/</link>
      <pubDate>Sat, 30 Jan 2021 04:08:10 +0900</pubDate>
      
      <guid>https://tsuzukihashi.github.io/posts/flutter/entry-flutter/</guid>
      <description>はじめに 兼ねてより気になっていたFlutterというものを始めようかと思います。
2019年にヤフーに新卒入社した右も左もわからなかった自分が、運良くPayPayフリマのiOSチームに配属されて技術的にも人間的にも優れた先輩方に教わりながらiOSアプリ開発も少しずつできるようになってきました。
Swiftでの個人アプリ開発もつづけ、そろそろAndroidも対応した物を作りたいという気持ちが僅かながら芽生えてきました。
しかし、ネイティブで両方作るのは結構しんどいのでは？という気持ちもありまして、一粒で二度美味しいと評判のFlutterに手を出すことにしました。
Flutter FlutterはGoogleによって開発されているマルチプラットフォームで動作するモバイルアプリケーションUIフレームワークです。
開発言語はDartと呼ばれるもので、こちらもGoogleによって開発されています。
プラットフォームも言語もGoogleによって統率されており、なかなかGoogleが気合を入れていることが感じざるを得ないものとなっています。
Firebase周りとの連携もしやすいとも聞いているので、やるしかないです。
開発環境 開発環境はAndroid StudioとVSCodeが主流らしいです。
自分はVSCodeが見た目的に好きなのでそちらでやることにします。
インストールしてみる ※ Android Studio, Xcode, Homebrew, Cocoapodsがインストールされてる前提
Flutter自体はは公式サイトからzipファイルをダウンロードして任意の場所においてパスを指定する。
公式サイト
パスは任意の場所でよく、以下のようにbinまでしてあげれば良いです。
export PATH=&amp;#34;$PATH:$HOME/dev/flutter/bin&amp;#34; ここで
flutter doctor というコマンドを利用します。これでflutterが使えるのかどうか見てくれます。
さらに、修正方法も示してくれます。
続いて、VSCodeにFlutterのExtensionをインストールする。
コマンドパレットを開いて(⌘ + shift+ P)、flutterで検索するとNew Application Projectと出てくるのでそこからプロジェクトを作れます。
プロジェクトの名前を決定してあげると、プロジェクトが表示されます。
次にデバイスの選択方法です。
画面右下のデバイス領域をクリックすると、画面上部に選べるシミュレータが表示されます。
なかったら、Create Android emulatorしたり、iOSの場合、terminalで
open -a simulator と入力しても起動できるようです。（シラナカッタ）
アプリを実行してみる 右上の再生マークをクリックして実行できます。
以下のようにでもアプリが表示されればOK！ </description>
    </item>
    
  </channel>
</rss>
